---
import Layout from "../layouts/Layout.astro";
const APosts = await Astro.glob("../pages/posts/*.md");

const dataLength = 0;

const styles = (() => {
	let tempStyles = { background: "blue" };

	if (dataLength == 0) {
		tempStyles.background = "red";
	}

	return tempStyles;
})();
---

<Layout title="Home">
	<a href="#primero">primero</a>
	<a href="#segundo">segundo</a>
	<a href="#tercero">tercero</a>
	<div class="main-container">
		<main id="primero">
			<h1>Posts</h1>

			{
				APosts.map((postData) => (
					<div>
						<a href={postData.url}>{postData.frontmatter.title}</a>
					</div>
				))
			}
		</main>
		<main id="segundo">
			<h1>Posts</h1>

			{
				APosts.map((postData) => (
					<div>
						<a href={postData.url}>{postData.frontmatter.title}</a>
					</div>
				))
			}
		</main>
		<main id="tercero">
			<h1>Posts</h1>

			{
				APosts.map((postData) => (
					<div>
						<a href={postData.url}>{postData.frontmatter.title}</a>
					</div>
				))
			}
		</main>
	</div>
	<script>
		import { showAlert } from "../scripts/alert.script";

		const elements = Array.from(document.getElementsByTagName("a"));

		const lastTwoElements = elements.slice(elements.length - 2);

		lastTwoElements.forEach((element) => {
			element.addEventListener("click", () => {
				showAlert("Seras redireccionado a otro sitio web");
			});
		});
	</script>
</Layout>

<style define:vars={{ ...styles }}>
	main {
		display: inline-block;
		background-color: var(--background);
		margin: auto;
		padding: 1.5rem;
		width: 95%;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.main-container {
		width: 84vw;
		white-space: nowrap;
		overflow-x: hidden;
		scroll-behavior: smooth;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
